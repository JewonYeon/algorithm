/**
 * 링크
    - https://programmers.co.kr/learn/courses/30/lessons/42862
 * 문제
    - 점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다.
      다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다.
      학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다.
      예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다.
      체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.
      전체 학생의 수 n,
      체육복을 도난당한 학생들의 번호가 담긴 배열 lost,
      여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때,
      체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.
 * 제한 조건
    - 전체 학생의 수는 2명 이상 30명 이하입니다.
    - 체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
    - 여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
    - 여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.
    - 여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다.
      이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.
 * 예시
    입력
      1. 5, [2, 4], [1, 3, 5]
      2. 5, [2, 4], [3]
      3. 3, [3], [1]
    출력
      1. 5
      2. 4
      3. 2
 * 풀이
    Key: 한 쪽 방향을 우선적으로 삼는다.
    1. 입력을 토대로 체육복 수 배열을 구한다. (reserve, lost 적용) 이때, 인덱스, 순번을 조심!
    2. 현재 사람이 체육복이 0인 경우
      2-1. 전 사람이 체육복 2벌인 경우 전사람 - 1, 현재 + 1
      2-2. 다음 사람이 체육복 2벌인 경우 다음사람 - 1, 현재 + 1
    3. 최종 배열에서 체육복이 1 이상인 사람 수를 구한다.
 * ETC
    -
*/

function solution(n, lost, reserve) {
  const clothes = Array.from({ length: n + 1 }, () => 1);
  for (let c of reserve) { clothes[c]++ }
  for (let c of lost) { clothes[c]-- }
  for (let i = 1; i <= n; i++) {
    if (clothes[i] === 0) {
      if (clothes[i - 1] === 2) {
        clothes[i]++;
        clothes[i - 1]--;
      } else if (clothes[i + 1] === 2) {
        clothes[i]++;
        clothes[i + 1]--;
      }
    }
  }

  let answer = 0;
  for (let i = 1; i <= n; i++) {
    if (clothes[i] >= 1) {
      answer++;
    }
  }
  return answer;
}

console.log(solution(5, [2, 4], [1, 3, 5]))
console.log(solution(5, [2, 4], [3]))
console.log(solution(3, [3], [1]))
